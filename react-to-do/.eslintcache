[{"C:\\Users\\Daniil\\Desktop\\programmin\\React To-Do\\react-to-do\\react-to-do\\src\\index.js":"1","C:\\Users\\Daniil\\Desktop\\programmin\\React To-Do\\react-to-do\\react-to-do\\src\\App.js":"2","C:\\Users\\Daniil\\Desktop\\programmin\\React To-Do\\react-to-do\\react-to-do\\src\\components\\List\\List.jsx":"3","C:\\Users\\Daniil\\Desktop\\programmin\\React To-Do\\react-to-do\\react-to-do\\src\\components\\AddList\\index.jsx":"4","C:\\Users\\Daniil\\Desktop\\programmin\\React To-Do\\react-to-do\\react-to-do\\src\\components\\Badge\\Badge.jsx":"5","C:\\Users\\Daniil\\Desktop\\programmin\\React To-Do\\react-to-do\\react-to-do\\src\\components\\index.js":"6","C:\\Users\\Daniil\\Desktop\\programmin\\React To-Do\\react-to-do\\react-to-do\\src\\components\\Tasks\\Tasks.jsx":"7","C:\\Users\\Daniil\\Desktop\\programmin\\React To-Do\\react-to-do\\react-to-do\\src\\components\\Tasks\\AddTaskForm.jsx":"8"},{"size":237,"mtime":1608660134068,"results":"9","hashOfConfig":"10"},{"size":4563,"mtime":1610294704740,"results":"11","hashOfConfig":"10"},{"size":1866,"mtime":1610282186284,"results":"12","hashOfConfig":"10"},{"size":4484,"mtime":1610297060673,"results":"13","hashOfConfig":"10"},{"size":330,"mtime":1608811974850,"results":"14","hashOfConfig":"10"},{"size":233,"mtime":1609443650457,"results":"15","hashOfConfig":"10"},{"size":2582,"mtime":1610294287365,"results":"16","hashOfConfig":"10"},{"size":2017,"mtime":1610297285613,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1cr9zac",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Daniil\\Desktop\\programmin\\React To-Do\\react-to-do\\react-to-do\\src\\index.js",[],["37","38"],"C:\\Users\\Daniil\\Desktop\\programmin\\React To-Do\\react-to-do\\react-to-do\\src\\App.js",[],"C:\\Users\\Daniil\\Desktop\\programmin\\React To-Do\\react-to-do\\react-to-do\\src\\components\\List\\List.jsx",[],"C:\\Users\\Daniil\\Desktop\\programmin\\React To-Do\\react-to-do\\react-to-do\\src\\components\\AddList\\index.jsx",[],"C:\\Users\\Daniil\\Desktop\\programmin\\React To-Do\\react-to-do\\react-to-do\\src\\components\\Badge\\Badge.jsx",["39"],"import React from 'react'\r\nimport './Badge.scss'\r\nimport classNames from 'classnames'\r\nimport DB from '../../assets/db.json'\r\n\r\nconst Badge = ({ color, onClick, className }) => (\r\n    <i\r\n        onClick={onClick}\r\n        className={classNames('badge', {[`badge--${color}`]: color}, className)}\r\n    />\r\n);\r\nexport default Badge;","C:\\Users\\Daniil\\Desktop\\programmin\\React To-Do\\react-to-do\\react-to-do\\src\\components\\index.js",[],"C:\\Users\\Daniil\\Desktop\\programmin\\React To-Do\\react-to-do\\react-to-do\\src\\components\\Tasks\\Tasks.jsx",["40"],"import React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport editSvg from '../../assets/img/edit.svg'\r\nimport addSvg from '../../assets/img/add.svg'\r\n\r\nimport './Tasks.scss';\r\nimport AddTaskForm from \"./AddTaskForm\";\r\n\r\nconst Tasks = ({ list, onEditTitle }) => {\r\n\r\n    const editTitle = () => {\r\n        const newTitle = window.prompt('Название списка')\r\n        if (newTitle) {\r\n            onEditTitle(list.id, newTitle);\r\n            axios.patch('http://localhost:3001/lists/' + list.id, {\r\n                name: newTitle\r\n            }).catch(() => {\r\n                alert('Не удалось обновить название списка');\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"tasks\">\r\n            <h2 className=\"tasks__title\">\r\n                {list.name}\r\n                <img\r\n                    onClick={() => editTitle()}\r\n                    src={editSvg}\r\n                    alt=\"Edit icon\"/>\r\n            </h2>\r\n            \r\n            <div className=\"tasks__items\">\r\n                {!list.tasks.length && <h2>Задачи отсутствуют</h2>}\r\n                {list.tasks.map(task => (\r\n                    <div key={task.id} className=\"tasks__items-row\">\r\n                        <div className=\"checkbox\">\r\n                            <input id={`task-${task.id}`} type=\"checkbox\" />\r\n                            <label htmlFor={`task-${task.id}`}>\r\n                                <svg\r\n                                    width=\"11\"\r\n                                    height=\"8\"\r\n                                    viewBox=\"0 0 11 8\"\r\n                                    fill=\"none\"\r\n                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                >\r\n                                    <path\r\n                                        d=\"M9.29999 1.20001L3.79999 6.70001L1.29999 4.20001\"\r\n                                        stroke=\"#000\"\r\n                                        strokeWidth=\"1.5\"\r\n                                        strokeLinecap=\"round\"\r\n                                        strokeLinejoin=\"round\"\r\n                                    />\r\n                                </svg>\r\n                            </label>\r\n                        </div>\r\n                        <input readOnly value={task.text} />\r\n                    </div>\r\n                    ))}\r\n                    <AddTaskForm />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Tasks;","C:\\Users\\Daniil\\Desktop\\programmin\\React To-Do\\react-to-do\\react-to-do\\src\\components\\Tasks\\AddTaskForm.jsx",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":4,"column":8,"nodeType":"47","messageId":"48","endLine":4,"endColumn":10},{"ruleId":"45","severity":1,"message":"49","line":5,"column":8,"nodeType":"47","messageId":"48","endLine":5,"endColumn":14},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'DB' is defined but never used.","Identifier","unusedVar","'addSvg' is defined but never used.","no-global-assign","no-unsafe-negation"]